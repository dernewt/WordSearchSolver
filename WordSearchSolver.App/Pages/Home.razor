@page "/"
@using WordSearchSolver.Ai
@using WordSearchSolver.Core
@using WordSearchSolver.App.Components
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>WordSearchSolver</PageTitle>

<h1>Take a photo of your puzzle</h1>

<div>
    <label>
        Api Endpoint:
        <InputText @bind-value="apiEndpoint" />
    </label>

    <label>
        Api Key:
        <InputText type="password" @bind-value="apiKey" />
    </label>
</div>

<div>
    <label>
        Image:
        <InputFile accept="image/*"
                   capture="environment"
                   OnChange="ReadImage"
                   @ref="wordSearchUpload" />
    </label>
</div>

<WordSearchArea
    FileElement="wordSearchUpload!.Element"
                @ref="wordSearchArea" />

@code {
    private string apiKey = string.Empty;
    private string apiEndpoint = string.Empty;

    private WordSearchArea? wordSearchArea;
    private InputFile? wordSearchUpload;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        apiKey = await LocalStorage.GetItemAsync<string>(nameof(apiKey)) ?? apiKey;
        apiEndpoint = await LocalStorage.GetItemAsync<string>(nameof(apiEndpoint)) ?? apiEndpoint;
    }

    private async Task ReadImage(InputFileChangeEventArgs e)
    {
        await LocalStorage.SetItemAsync(nameof(apiKey), apiKey);
        await LocalStorage.SetItemAsync(nameof(apiEndpoint), apiEndpoint);

        wordSearchArea?.Initialize();
        var api = new AzureDocumentIntellegence(new Credential(apiKey, apiEndpoint));
        // wordSearch = await api.ExtractWordSearch(
        //     BinaryData.FromStream(
        //         e.File.OpenReadStream()));
    }


}
